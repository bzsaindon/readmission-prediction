download.file("http://www.newcl.org/data/zipfiles/a1.zip",temp)
data <- read.table(unz(temp, "a1.dat"))
unlink(temp)
download.file("http://archive.ics.uci.edu/ml/machine-learning-databases/00296/dataset_diabetes.zip",temp)
data <- read.csv(unz(temp, "diabetic_data.csv"))
temp
data <- read.csv(unz(temp, "diabetic_data.dat"))
temp
data <- read.csv(unz(temp, "/diabetic_data.csv"))
getwd()
getwd()
getwd()
df <-read.csv("/Downloads/diabetic_data.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
df <-read.csv("/Downloads/dataset_diabetes/diabetic_data.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
df <-read.csv("Downloads/dataset_diabetes/diabetic_data.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
View(df)
id_mapping <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
View(id_mapping)
id_mapping <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, nrows = 10)
id_mapping <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, nrows = 10:11)
id_mapping <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, nrows = 10)
View(id_mapping)
id_mapping <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, nrows = 9)
id_mapping <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, nrows = 8)
id_mapping <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, nrows = 8, skip = 1)
View(id_mapping)
id_mapping2 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, skip = 9)
View(id_mapping2)
id_mapping2 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, skip = 10)
id_mapping2 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, skip = 10, na.strings = c(" ", ""))
id_mapping2 <-read.table("Downloads/dataset_diabetes/IDs_mapping.csv", skip = 10)
id_mapping2 <-read.table("Downloads/dataset_diabetes/IDs_mapping.csv", header=TRUE, skip = 10)
id_mapping2 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 10, na.strings = c(" ", ""))
id_mapping2 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 10, nrows = 31, na.strings = c(" ", ""))
id_mapping2 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 10, nrows = 30, na.strings = c(" ", ""))
id_mapping3 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 10, nrows = 30, na.strings = c(" ", ""))
View(id_mapping3)
id_mapping3 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 10,  na.strings = c(" ", ""))
View(id_mapping)
id_mapping <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, nrows = 8)
View(id_mapping)
View(id_mapping3)
View(id_mapping2)
View(id_mapping3)
id_mapping3 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 40,  na.strings = c(" ", ""))
id_mapping3 <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 42,  na.strings = c(" ", ""))
View(id_mapping2)
View(id_mapping)
admission_type_map <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, nrows = 8)
discharge_disposition_map <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 10, nrows = 30, na.strings = c(" ", ""))
admission_source_map <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 42,  na.strings = c(" ", ""))
View(df)
View(df)
length(unique(df$patient_nbr))
library(dplyr)
df %>%
group_by(patient_nbr) %>%
summarise(count = n())
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count > 3)
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3)
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
sumarise(count =
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
sumarise(count =n())
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
sumarise(count =n())
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
sumarise(count =n())
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
summarise(count =n())
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
summarise(proportion_ge_3_admits =n()/length(unique(df$patient_nbr)))
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
summarise(proportion_ge_3_admits =100*n()/length(unique(df$patient_nbr)))
emergency <- df %>%
filter(admission_type_id = 1)
elective <- df %>%
filter(admission_type_id = 3)
em_el <- merge(emergency, elective, by.x = "patient_nbr", by.y = "patient_nbr")
emergency <- df %>%
filter(admission_type_id == 1)
elective <- df %>%
filter(admission_type_id == 3)
em_el <- merge(emergency, elective, by.x = "patient_nbr", by.y = "patient_nbr")
length(unique(em_el$patient_nbr)
length(unique(em_el$patient_nbr)
length(unique(em_el$patient_nbr))
df %>%
group_by(patient_nbr) %>%
summarise(total_procedurs = sum(num_procedures))
df %>%
group_by(patient_nbr) %>%
summarise(total_procedures = sum(num_procedures)) %>%
filter(max_procedure = max(total_procedures))
df %>%
group_by(patient_nbr) %>%
summarise(total_procedures = sum(num_procedures)) %>%
filter(max_procedure == max(total_procedures))
df %>%
group_by(patient_nbr) %>%
summarise(total_procedures = sum(num_procedures)) %>%
top_n(n=1)
df %>%
group_by(patient_nbr) %>%
summarise(total_procedures = sum(num_procedures)) %>%
group_by(patient_nbr) %>%
top_n(n=1)
df %>%
group_by(patient_nbr) %>%
summarise(total_procedures = sum(num_procedures)) %>%
top_n(n=1)
a<-df %>%
group_by(patient_nbr) %>%
summarise(total_procedures = sum(num_procedures))
View(a)
df %>%
filter(patient_nbr== 92709351) %>%
summarise(admit_count = n())
df[df$admission_type_id==1,]
em_el <- merge(emergency, elective, by.x = "patient_nbr", by.y = "patient_nbr")
length(unique(em_el$patient_nbr))
em_el <- merge(df[df$admission_type_id==1,], df[df$admission_type_id==3,], by.x = "patient_nbr", by.y = "patient_nbr")
length(unique(em_el$patient_nbr))
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
summarise(proportion_ge_3_admits =100*n()/length(unique(df$patient_nbr)))
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
summarise(proportion_ge_3_admits =100*n()/length(unique(df$patient_nbr)), over_3_admit_count =n())
### Answer: 8.9% of patients were admitted at least 3 times
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
summarise(proportion_ge_3_admits =100*n()/length(unique(df$patient_nbr)), over_3_admit_count =n(), unique_patient_count = length(unique(df$patient_nbr))
)
em_el <- merge(df[df$admission_type_id==1,], df[df$admission_type_id==3,],
by.x = "patient_nbr", by.y = "patient_nbr")
length(unique(em_el$patient_nbr))
df %>%
group_by(patient_nbr) %>%
summarise(total_procedures = sum(num_procedures)) %>%
top_n(n=1)
df %>%
filter(patient_nbr== 92709351) %>%
summarise(admit_count = n())
deduped.data <- unique( df[ , ] )
### Name: Brian Saindon
### Date: 9/21/2017
## Library Import
library(dplyr)
## Data Read In
df <-read.csv("Downloads/dataset_diabetes/diabetic_data.csv",
sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
## Supporting Files Read In
admission_type_map <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",
sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, nrows = 8)
discharge_disposition_map <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",
sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 10, nrows = 30, na.strings = c(" ", ""))
admission_source_map <-read.csv("Downloads/dataset_diabetes/IDs_mapping.csv",
sep=",", header=TRUE, stringsAsFactors = FALSE, skip = 42,  na.strings = c(" ", ""))
###   What proportion of patients were admitted at least 3 times?
df %>%
group_by(patient_nbr) %>%
summarise(count = n()) %>%
filter(count >= 3) %>%
summarise(proportion_ge_3_admits =100*n()/length(unique(df$patient_nbr)), over_3_admit_count =n(), unique_patient_count = length(unique(df$patient_nbr)))
###   Answer: 8.9% (6,339/71,518) of patients were admitted at least 3 times
###   How many patients have been admitted at least once with admission type
###   "Emergency" and also at least once with admission type "Elective"?
###   (See the IDs_mapping.csv file for documentation of the different values
###   of the admission_type_id column).
em_el <- merge(df[df$admission_type_id==1,], df[df$admission_type_id==3,],
by.x = "patient_nbr", by.y = "patient_nbr")
length(unique(em_el$patient_nbr))
###   Answer: 3,169 patients have been admitted at least once with admission type "Emergency"
###   and also at least once with admission type "Elective"
###   What is the largest number of procedures (excluding lab procedures)
###   performed on any patient, across all of their hospital admissions?
df %>%
group_by(patient_nbr) %>%
summarise(total_procedures = sum(num_procedures)) %>%
top_n(n=1)
###   Answer: 51 procedures is the largest number of procedures performed on any patient
###   across all hospital admissions.
###   How many times was that patient admitted to the hospital?
df %>%
filter(patient_nbr== 92709351) %>%
summarise(admit_count = n())
### 21 admits is the number of times that patient was admitted to the hospital
length(unique(df$patient_nbr))
df %>%
group_by(discharge_disposition_id) %>%
summarise(unie_patients = length(unique((patient_nbr))))
discharge_freq < df %>%
group_by(discharge_disposition_id) %>%
summarise(unie_patients = length(unique((patient_nbr))))
discharge_freq <-df %>%
group_by(discharge_disposition_id) %>%
summarise(unie_patients = length(unique((patient_nbr))))
View(discharge_freq)
df %>%
filter(discharge_disposition_id != 11) %>%
summarise(count = length(unique((patient_nbr)))
df %>%
filter(discharge_disposition_id != 11) %>%
summarise(count = n(unique((patient_nbr)))
df %>%
filter(discharge_disposition_id != 11) %>%
summarise(count = n(unique((patient_nbr)))
df %>%
filter(discharge_disposition_id != 11) %>%
summarise(count = n(unique((patient_nbr))))
df %>%
filter(discharge_disposition_id != 11) %>%
summarise(count = length(unique((patient_nbr))))
df %>%
filter(discharge_disposition_id != 11, 19, 20, 21, 13, 14) %>%
summarise(count = length(unique((patient_nbr))))
df %>%
filter(discharge_disposition_id != (11, 19, 20, 21, 13, 14)) %>%
summarise(count = length(unique((patient_nbr))))
df %>%
filter(discharge_disposition_id != c(11, 19, 20, 21, 13, 14)) %>%
summarise(count = length(unique((patient_nbr))))
df %>%
filter(discharge_disposition_id != 11  & != 19 & != 20 & != 21 & != 13 & != 14) %>%
summarise(count = length(unique((patient_nbr))))
df %>%
filter(discharge_disposition_id != 11  & discharge_disposition_id != 19 & discharge_disposition_id != 20 & discharge_disposition_id != 21 & discharge_disposition_id != 13 & discharge_disposition_id != 14) %>%
summarise(count = length(unique((patient_nbr))))
df %>%
filter(discharge_disposition_id == 11 | discharge_disposition_id == 19 | discharge_disposition_id == 20 & discharge_disposition_id == 21 & discharge_disposition_id == 13 & discharge_disposition_id == 14) %>%
summarise(count = length(unique((patient_nbr))))
df %>%
filter(discharge_disposition_id != 11  & discharge_disposition_id != 19 & discharge_disposition_id != 20 & discharge_disposition_id != 21 & discharge_disposition_id != 13 & discharge_disposition_id != 14) %>%
summarise(count = length(unique((patient_nbr))))
length(df)
length(unique(df$patient_nbr))
df %>%
filter(discharge_disposition_id != 11  & discharge_disposition_id != 19 & discharge_disposition_id != 20 & discharge_disposition_id != 21 & discharge_disposition_id != 13 & discharge_disposition_id != 14) %>%
summarise(count = length(unique((patient_nbr))), count_records = n())
df$readmitted_dv <- if(df$readmitted =="<30") 1 else
if(df$readmitted ==">30") 0 else
if (df$readmitted =="NO") 0 else
NA
df$readmitted_dv <- if(df$readmitted =="<30") {1} else
if(df$readmitted ==">30") {0} else
if(df$readmitted =="NO") {0} else
{NA}
df$readmitted_dv <- if(df$readmitted =="<30") {1} else
if(df$readmitted ==">30") {0} else
if(df$readmitted =="NO") {0}
df$readmitted_dv <- if(readmitted =="<30") {1} else
if(df$readmitted ==">30") {0} else
if(df$readmitted =="NO") {0}
df$readmitted_dv <- ifelse(df$readmitted =="<30", 1, 0)
raf<-readRDS("/Users/briansaindon/Desktop/cms_puf/derived variables/RAF.rds")
View(raf)
hcc_2009<- readRDS("Desktop/cms_puf/derived variables/hcc_2009.rds")
View(hcc_2009)
summary(hcc_2010)
library(stringr)
library(dplyr)
xwalk<-read.csv("../lookup/hccxwalk.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, na.strings = c(" ", ""))
getwd()
setwd("/Users/briansaindon/Desktop/ableto/code/")
xwalk<-read.csv("../lookup/hccxwalk.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, na.strings = c(" ", ""))
xwalk<-read.csv("/Users/briansaindon/Desktop/ableto//lookup/hccxwalk.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, na.strings = c(" ", ""))
xwalk<-read.csv("/Users/briansaindon/Desktop/ableto/lookup/hccxwalk.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, na.strings = c(" ", ""))
getwd()
xwalk<-read.csv("../lookup/hccxwalk.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, na.strings = c(" ", ""))
xwalk<-read.csv("../lookup/hccxwalk.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, na.strings = c(" ", ""))
xwalk<-select(xwalk, icd, hcc2014, shortdesc)
xwalk$icd<- as.factor(xwalk$icd)
xwalk<-select(xwalk, icd, hcc2014, shortdesc)
xwalk$icd<- as.factor(xwalk$icd)
df <-read.csv("Downloads/dataset_diabetes/diabetic_data.csv",
sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
df <-read.csv("/Users/briansaindon/Downloads/dataset_diabetes/diabetic_data.csv",
sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
ip_tmp <- DE1_0_2008_to_2010_Inpatient_Claims_Sample_1[, c("DESYNPUF_ID","CLM_THRU_DT", "ADMTNG_ICD9_DGNS_CD", "ICD9_DGNS_CD_1", "ICD9_DGNS_CD_2", "ICD9_DGNS_CD_3", "ICD9_DGNS_CD_4", "ICD9_DGNS_CD_5", "ICD9_DGNS_CD_6", "ICD9_DGNS_CD_7", "ICD9_DGNS_CD_8", "ICD9_DGNS_CD_9", "ICD9_DGNS_CD_10")]
ip_tmp1<-reshape(ip_tmp, idvar=c("patient_nbr"), varying = list(grep('ICD9', names(ip_tmp),value=TRUE)),direction="long", new.row.names = 1:1000000)
ip_tmp <- df[, c("patient_nbr", "diag_1", "diag_2", "diag_3")]
ip_tmp1<-reshape(ip_tmp, idvar=c("patient_nbr"), varying = list(grep('ICD9', names(ip_tmp),value=TRUE)),direction="long", new.row.names = 1:1000000)
mdata <- melt(ip_tmp, id=c("patient_nbr"))
library(reshape)
install.packages("reshape")
library(reshape)
ip_tmp1<-reshape(ip_tmp, idvar=c("patient_nbr"), varying = list(grep('ICD9', names(ip_tmp),value=TRUE)),direction="long", new.row.names = 1:1000000)
mdata <- melt(ip_tmp, id=c("patient_nbr"))
View(mdata)
View(xwalk)
xwalk<-read.csv("../lookup/cms_hcc_icd9_abbrev",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, na.strings = c(" ", ""))
xwalk<-read.csv("../lookup/cms_hcc_icd9_abbrev.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE, na.strings = c(" ", ""))
xwalk<-read.csv("../lookup/cms_hcc_icd9_abbrev.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
x<-read.csv("../lookup/cms_hcc_icd9_abbrev.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
xwalk<-read.csv("../lookup/cms_hcc_icd9_abbrev.csv",sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
xwalk<-read.csv("../lookup/cms_hcc_icd9_abbrev.csv", sep=",", header=TRUE, stringsAsFactors = FALSE)
View(xwalk)
xwalk$icd<- as.factor(xwalk$icd9_abbrev)
# 2. Call in Diabetic Data
df <-read.csv("/Users/briansaindon/Downloads/dataset_diabetes/diabetic_data.csv",
sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
ip_tmp <- df[, c("patient_nbr", "diag_1", "diag_2", "diag_3")]
install.packages("reshape")
library(reshape)
mdata <- melt(ip_tmp, id=c("patient_nbr"))
View(mdata)
ip_tmp1 <- melt(ip_tmp, id=c("patient_nbr"))
rownames(ip_tmp1) <- c()
ip_tmp1$source_clm<-c("IP")
ip_tmp1$value<-as.factor(ip_tmp1$value)
raf_ip<-ip_tmp1
ip_tmp1$icd<-as.factor(ip_tmp1$value)
raf_ip<-ip_tmp1
raf_ip$icd<-str_trim(raf_ip$icd, side = c("both"))
xwalk$icd<-str_trim(xwalk$icd, side = c("both"))
raf_ip<- merge(x = raf_ip, y = xwalk, by = "icd", all.x=TRUE)
View(raf_ip)
raf_ip <- raf_ip[!is.na(raf_ip$icd),]
xwalk<-read.csv("../lookup/cms_hcc_icd9_abbrev.csv", sep=",", header=TRUE, stringsAsFactors = FALSE)
xwalk$icd<- as.factor(xwalk$icd9_abbrev)
df <-read.csv("/Users/briansaindon/Downloads/dataset_diabetes/diabetic_data.csv",
sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
ip_tmp <- df[, c("patient_nbr", "diag_1", "diag_2", "diag_3")]
library(reshape)
ip_tmp1 <- melt(ip_tmp, id=c("patient_nbr"))
View(ip_tmp1)
ip_tmp1$icd<-as.factor(ip_tmp1$value)
raf_ip<-ip_tmp1
raf_ip$icd<-str_trim(raf_ip$icd, side = c("both"))
xwalk$icd<-str_trim(xwalk$icd, side = c("both"))
ip_tmp1$icd<-gsub("(.*)..*", "\\1", ip_tmp1$icd)
View(ip_tmp1)
ip_tmp1$icd<-gsub("(.*)..**", "\\1", ip_tmp1$icd)
ip_tmp1$icd<-gsub("(.*)\\..*", "\\1", ip_tmp1$icd)
View(ip_tmp1)
raf_ip<-ip_tmp1
raf_ip$icd<-str_trim(raf_ip$icd, side = c("both"))
xwalk$icd<-str_trim(xwalk$icd, side = c("both"))
raf_ip<- merge(x = raf_ip, y = xwalk, by = "icd", all.x=TRUE)
raf_ip<-ip_tmp1
View(raf_ip)
raf_ip$icd<-str_trim(raf_ip$icd, side = c("both"))
View(raf_ip)
xwalk$icd<-str_trim(xwalk$icd, side = c("both"))
raf_ip<- merge(x = raf_ip, y = xwalk, by = "icd", all.x=TRUE)
View(raf_ip)
setwd("/Users/briansaindon/Desktop/ableto/code/")
xwalk<-read.csv("../lookup/cms_hcc_icd9_abbrev.csv", sep=",", header=TRUE, stringsAsFactors = FALSE)
#xwalk<-select(xwalk, icd, hcc2014, shortdesc)
xwalk$icd<- as.factor(xwalk$icd9_abbrev)
# 2. Call in Diabetic Data
df <-read.csv("/Users/briansaindon/Downloads/dataset_diabetes/diabetic_data.csv",
sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
##################
#   Inpatient  #
#################
ip_tmp <- df[, c("patient_nbr", "diag_1", "diag_2", "diag_3")]
library(reshape)
ip_tmp1 <- melt(ip_tmp, id=c("patient_nbr"))
#ip_tmp1<-reshape(ip_tmp, idvar=c("patient_nbr"), varying = list(grep('ICD9', names(ip_tmp),value=TRUE)),direction="long", new.row.names = 1:1000000)
rownames(ip_tmp1) <- c()
#ip_tmp1$source_clm<-c("IP")
ip_tmp1$icd<-as.factor(ip_tmp1$value)
ip_tmp1$icd<-gsub("(.*)\\..*", "\\1", ip_tmp1$icd)
#raf_ip<-select(ip_tmp1, DESYNPUF_ID, CLM_THRU_DT, icd = ADMTNG_ICD9_DGNS_CD ,source_clm)
raf_ip<-ip_tmp1
raf_ip$icd<-str_trim(raf_ip$icd, side = c("both"))
xwalk$icd<-str_trim(xwalk$icd, side = c("both"))
raf_ip<- merge(x = raf_ip, y = xwalk, by = "icd")
View(raf_ip)
View(raf_ip)
View(raf_ip)
saveRDS(raf_ip, file = "/Users/briansaindon/Desktop/ableto/derived variables/RAF.rds")
saveRDS(raf_ip, file = "/Users/briansaindon/Desktop/ableto/derived variables/RAF.rds")
setwd("/Users/briansaindon/Desktop/ableto/code/")
xwalk<-read.csv("../lookup/cms_hcc_icd9_abbrev.csv", sep=",", header=TRUE, stringsAsFactors = FALSE)
saveRDS(raf_ip, file = "../derived variables/RAF.rds")
setwd("github_repos/readmission-predictions/")
getwd()
df <-read.csv("../data/diabetic_data.csv",
sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
################################################################################################################
################################################################################################################
#   Code: file-flattening-1.R
#   Purpose: remove variables with high missing, remove duplicate records, derive variables
#   DS: Brian Saindon
#   Date: 10/1/2017
#   Input: diabetic_data.csv
#   Output: df_flattening.RDS
################################################################################################################
################################################################################################################
setwd("github_repos/readmission-predictions/")
getwd()
################################################################################################################
#   Data Read In
df <-read.csv("../data/diabetic_data.csv",
sep=",",quote = ",", header=TRUE, stringsAsFactors = FALSE)
################################################################################################################
################################################################################################################
# Exclusion Criteria
#   Remove Variables with high percent missing: Weight and Payer
#   Source: https://www.hindawi.com/journals/bmri/2014/781670/tab1/
df <- df[ -c(6, 11) ]
#   Remove Individuals with a discharge to hospice or patient death
#   Source: https://www.hindawi.com/journals/bmri/2014/781670/
df <- df %>%
filter(discharge_disposition_id != 11  & discharge_disposition_id != 19 & discharge_disposition_id != 20 & discharge_disposition_id != 21 & discharge_disposition_id != 13 & discharge_disposition_id != 14)
#   Remove duplicate Records
df$age_group<- ifelse(df$age == "[0-10)", 1,
ifelse(df$age =="[10-20)", 2,
ifelse(df$age =="[20-30)", 3,
ifelse(df$age =="[30-40)", 4,
ifelse(df$age =="[40-50)", 5,
ifelse(df$age =="[50-60)", 6,
ifelse(df$age =="[60-70)", 7,
ifelse(df$age=="[70-80)", 8,
ifelse(df$age=="[80-90)", 9,
ifelse(df$age=="[90-100)", 10, 0))))))))))
attach(df)
ordered_data <- df[order(patient_nbr, -age_group), ]
detach(df)
# Select first row per id
df <- ordered_data[!duplicated(ordered_data$patient_nbr),]
########################################################
# Variable Derivation / Modification
########################################################
# Dependent Variable: READMISSION
# Definition: readmission if readmission is < 30 day, no readmission if readamission is > 30 days or blank
df$readmitted_dv <- ifelse(df$readmitted =="<30", 1, 0)
# medical_specialty: group ? as missing category
df$medical_specialty<- ifelse(df$medical_specialty =="?", "missing", df$medical_specialty)
# medication values: convert to binary (0 = no, 1 = Steady/Up/Down)
colnames(df)
varnames<- colnames(df[c(23:45)])
varnames
for(i in varnames) {
df[i]<- ifelse(df[i] == "No", 0,1)
}
# hba1c - convert value to a binary indicator that identifies whether a test had been performed
# source: https://www.hindawi.com/journals/bmri/2014/781670/
# hba1c_performed
df$hba1c_performed <- ifelse(df$A1Cresult =="None", 0, 1)
# convert several variables to 1, 0
df$diabetesMed<- ifelse(df$diabetesMed =="Yes", 1, 0)
df$gender<- ifelse(df$gender == "Female", 1, 0)
# race: code ? as missing
df$race <- ifelse(df$race =="?", "missing", df$race)
# change: convert to 1, 0
df$change<-ifelse(df$change == "Ch", 1, 0)
colnames(df)
final <- df[-c(1, 5, 48) ]
# Remove encounter_id, age (recoded), 48(recoded), 49(counter)
saveRDS(final, file = "../derived_variables/df_flattened_1.rds")
#Pending:
# Group:
# admission_type_id, discharge_disposition_id, admission_source_id
# time_in_hospital, num_lab_procedures, num_procedures, num_medications,
# number_outpatient, num_emergency, number_inpatient, number_diagnoses
xwalk<-read.csv("../lookup/cms_hcc_icd9_abbrev.csv", sep=",", header=TRUE, stringsAsFactors = FALSE)
df <- readRDS("../derived_variables/df_flattened_1.rds")
df_flattened<-readRDS("../derived_variables/df_flattened_1.rds")
hcc_flattened<-readRDS(file = "../derived_variables/hcc.rds")
biomed_groups_flattened<-readRDS(file = "../derived_variables/dx_groups_biomed.rds")
length(unique(biomed_groups_flattened$patient_nbr))
length(unique(df_flattened$patient_nbr))
length(unique(hcc_flattened$patient_nbr))
###Merge
# Left join
model.data <- merge.data.frame(x = df_flattened, y = hcc_flattened, by = "patient_nbr", all.x =TRUE)
model.data <- merge.data.frame(x = model.data, y = biomed_groups_flattened, by = "patient_nbr", all.x =TRUE)
# Replace NA as 0
model.data[is.na(model.data)] <- 0
colnames(model.data)
#rename condition variables
names(model.data)[49:117] <- paste0('x', 1:(ncol(model.data[49:117])))
# remove diag columns
model.data<- model.data[,-c(15, 16, 17)]
saveRDS(model.data, file = "../derived_variables/model.data.rds")
